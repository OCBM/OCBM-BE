// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  userId       String         @id @default(uuid()) @db.Uuid
  userName     String         @unique
  employeeId   String         @unique
  name         String?
  position     String?
  role         String?
  password     String?
  email        String         @unique
  createdAt    DateTime?      @default(now())
  updatedAt    DateTime?      @updatedAt
  groups       Group[]        @relation("AdminToGroup")
  organization Organization[] @relation("AdminToOrganization")
}

model User {
  userId       String         @id @default(uuid()) @db.Uuid
  userName     String         @unique
  employeeId   String         @unique
  name         String?
  position     String?
  role         String?
  password     String?
  email        String         @unique
  createdAt    DateTime?      @default(now())
  updatedAt    DateTime?      @updatedAt
  groups       Group[]        @relation("UserToGroup")
  organization Organization[] @relation("UserToOrganization")
  plants Plant[] @relation("UserToPlant")
}

model Group {
  groupId     String   @id @default(uuid()) @db.Uuid
  groupName   String
  role        String
  permissions String[]
  users       User[]   @relation("UserToGroup")
  admins      Admin[]  @relation("AdminToGroup")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model Organization {
  organizationId   String    @id @default(uuid()) @db.Uuid
  organizationName String
  createdAt        DateTime? @default(now())
  updatedAt        DateTime? @updatedAt
  users            User[]    @relation("UserToOrganization")
  admins           Admin[]   @relation("AdminToOrganization")
  plants           Plant[]
}

model Plant {
  plantId        String       @id @default(uuid()) @db.Uuid
  image          String
  plantName      String
  description    String
  createdAt      DateTime?    @default(now())
  updatedAt      DateTime?    @updatedAt
  organizationId String       @db.Uuid
  organization   Organization @relation(fields: [organizationId], references: [organizationId])
  shops          Shop[]
  users User[] @relation("UserToPlant")
}

model Shop {
  shopId    String    @id @default(uuid()) @db.Uuid
  shopName  String
  image     String
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
  plantId   String    @db.Uuid
  plant     Plant     @relation(fields: [plantId], references: [plantId])
}
