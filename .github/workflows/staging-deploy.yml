# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Deploy to EC2

on:
  push:
    branches:
      - ocbm/local-dev
  pull_request:
    types: [closed]  # Trigger when a pull request is closed
    branches:
      - ocbm/local-dev
    
jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: REMOVE existing containers
      uses: appleboy/ssh-action@master
      with:
        host: ec2-52-77-121-160.ap-southeast-1.compute.amazonaws.com
        username: ubuntu
        key: ${{ secrets.SSH_DEPLOY_PRIVATE_KEY }}
        script: |
          docker stop $(docker ps -a -q)
          docker rm $(docker ps -a -q)
          docker rmi $(docker images -a -q)
          docker builder prune --all -f
          sudo rm -rf /home/ubuntu/application

    - name: Copy Source Code to EC2
      uses: appleboy/scp-action@master
      with:
        host: ec2-52-77-121-160.ap-southeast-1.compute.amazonaws.com
        username: ubuntu
        key: ${{ secrets.SSH_DEPLOY_PRIVATE_KEY }}
        source: '.'
        target: '/home/ubuntu/application/OCBM-BE'
        overwrite: true
        

    - name: SSH into EC2 and Execute Commands
      uses: appleboy/ssh-action@master
      with:
        host: ec2-52-77-121-160.ap-southeast-1.compute.amazonaws.com
        username: ubuntu
        key: ${{ secrets.SSH_DEPLOY_PRIVATE_KEY }}
        script: |
          cd /home/ubuntu/application/OCBM-BE
          docker-compose -f docker-compose.prod.yml up -d
    
    
    
    
   
